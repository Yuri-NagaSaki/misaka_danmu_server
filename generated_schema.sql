-- PostgreSQL Schema for Misaka Danmu Server
-- Generated by offline schema validator


CREATE TABLE anime (
	title VARCHAR(255) NOT NULL, 
	type animetype NOT NULL, 
	image_url VARCHAR(512), 
	season INTEGER NOT NULL, 
	episode_count INTEGER, 
	source_url VARCHAR(512), 
	id BIGSERIAL NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT now(), 
	updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT now(), 
	PRIMARY KEY (id)
)




CREATE TABLE api_tokens (
	name VARCHAR(100) NOT NULL, 
	token VARCHAR(50) NOT NULL, 
	is_enabled BOOLEAN NOT NULL, 
	expires_at TIMESTAMP WITHOUT TIME ZONE, 
	id BIGSERIAL NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT now(), 
	updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT now(), 
	PRIMARY KEY (id), 
	CONSTRAINT idx_token_unique UNIQUE (token)
)




CREATE TABLE cache_data (
	cache_key VARCHAR(255) NOT NULL, 
	cache_provider VARCHAR(50), 
	cache_value TEXT NOT NULL, 
	expires_at TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	PRIMARY KEY (cache_key)
)




CREATE TABLE config (
	config_key VARCHAR(100) NOT NULL, 
	config_value VARCHAR(255) NOT NULL, 
	description TEXT, 
	PRIMARY KEY (config_key)
)




CREATE TABLE scheduled_tasks (
	id VARCHAR(100) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	job_type VARCHAR(50) NOT NULL, 
	cron_expression VARCHAR(100) NOT NULL, 
	is_enabled BOOLEAN NOT NULL, 
	last_run_at TIMESTAMP WITHOUT TIME ZONE, 
	next_run_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)




CREATE TABLE scrapers (
	provider_name VARCHAR(50) NOT NULL, 
	is_enabled BOOLEAN NOT NULL, 
	display_order INTEGER NOT NULL, 
	PRIMARY KEY (provider_name)
)




CREATE TABLE task_history (
	id VARCHAR(100) NOT NULL, 
	title VARCHAR(255) NOT NULL, 
	status VARCHAR(50) NOT NULL, 
	progress INTEGER NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT 'CURRENT_TIMESTAMP' NOT NULL, 
	updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT 'CURRENT_TIMESTAMP' NOT NULL, 
	finished_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)




CREATE TABLE tmdb_episode_mapping (
	tmdb_tv_id INTEGER NOT NULL, 
	tmdb_episode_group_id VARCHAR(50) NOT NULL, 
	tmdb_episode_id INTEGER NOT NULL, 
	tmdb_season_number INTEGER NOT NULL, 
	tmdb_episode_number INTEGER NOT NULL, 
	custom_season_number INTEGER NOT NULL, 
	custom_episode_number INTEGER NOT NULL, 
	absolute_episode_number INTEGER NOT NULL, 
	id BIGSERIAL NOT NULL, 
	PRIMARY KEY (id), 
	CONSTRAINT idx_group_episode_unique UNIQUE (tmdb_episode_group_id, tmdb_episode_id)
)




CREATE TABLE ua_rules (
	ua_string VARCHAR(255) NOT NULL, 
	id BIGSERIAL NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT now(), 
	updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT now(), 
	PRIMARY KEY (id), 
	CONSTRAINT idx_ua_string_unique UNIQUE (ua_string)
)




CREATE TABLE users (
	username VARCHAR(50) NOT NULL, 
	hashed_password VARCHAR(255) NOT NULL, 
	token TEXT, 
	token_update TIMESTAMP WITHOUT TIME ZONE, 
	id BIGSERIAL NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT now(), 
	updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT now(), 
	PRIMARY KEY (id), 
	CONSTRAINT idx_username_unique UNIQUE (username)
)




CREATE TABLE anime_aliases (
	anime_id BIGINT NOT NULL, 
	name_en VARCHAR(255), 
	name_jp VARCHAR(255), 
	name_romaji VARCHAR(255), 
	alias_cn_1 VARCHAR(255), 
	alias_cn_2 VARCHAR(255), 
	alias_cn_3 VARCHAR(255), 
	id BIGSERIAL NOT NULL, 
	PRIMARY KEY (id), 
	CONSTRAINT idx_anime_id_unique UNIQUE (anime_id), 
	FOREIGN KEY(anime_id) REFERENCES anime (id) ON DELETE CASCADE
)




CREATE TABLE anime_metadata (
	anime_id BIGINT NOT NULL, 
	tmdb_id VARCHAR(50), 
	tmdb_episode_group_id VARCHAR(50), 
	imdb_id VARCHAR(50), 
	tvdb_id VARCHAR(50), 
	douban_id VARCHAR(50), 
	bangumi_id VARCHAR(50), 
	id BIGSERIAL NOT NULL, 
	PRIMARY KEY (id), 
	CONSTRAINT idx_anime_id_unique UNIQUE (anime_id), 
	FOREIGN KEY(anime_id) REFERENCES anime (id) ON DELETE CASCADE
)




CREATE TABLE anime_sources (
	anime_id BIGINT NOT NULL, 
	provider_name VARCHAR(50) NOT NULL, 
	media_id VARCHAR(255) NOT NULL, 
	is_favorited BOOLEAN NOT NULL, 
	id BIGSERIAL NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT now(), 
	updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT now(), 
	PRIMARY KEY (id), 
	CONSTRAINT idx_anime_provider_media_unique UNIQUE (anime_id, provider_name, media_id), 
	FOREIGN KEY(anime_id) REFERENCES anime (id) ON DELETE CASCADE
)




CREATE TABLE bangumi_auth (
	user_id BIGINT NOT NULL, 
	bangumi_user_id INTEGER, 
	nickname VARCHAR(255), 
	avatar_url VARCHAR(512), 
	access_token TEXT NOT NULL, 
	refresh_token TEXT, 
	expires_at TIMESTAMP WITHOUT TIME ZONE, 
	authorized_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (id) ON DELETE CASCADE
)




CREATE TABLE oauth_states (
	state_key VARCHAR(100) NOT NULL, 
	user_id BIGINT NOT NULL, 
	expires_at TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	PRIMARY KEY (state_key), 
	FOREIGN KEY(user_id) REFERENCES users (id) ON DELETE CASCADE
)




CREATE TABLE token_access_logs (
	token_id INTEGER NOT NULL, 
	ip_address VARCHAR(45) NOT NULL, 
	user_agent TEXT, 
	access_time TIMESTAMP WITHOUT TIME ZONE DEFAULT 'CURRENT_TIMESTAMP' NOT NULL, 
	status VARCHAR(50) NOT NULL, 
	path VARCHAR(512), 
	id BIGSERIAL NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(token_id) REFERENCES api_tokens (id) ON DELETE CASCADE
)




CREATE TABLE episode (
	source_id BIGINT NOT NULL, 
	title VARCHAR(255) NOT NULL, 
	episode_index INTEGER NOT NULL, 
	provider_episode_id VARCHAR(255), 
	source_url VARCHAR(512), 
	fetched_at TIMESTAMP WITHOUT TIME ZONE, 
	comment_count INTEGER NOT NULL, 
	id BIGSERIAL NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT now(), 
	updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT now(), 
	PRIMARY KEY (id), 
	CONSTRAINT idx_source_episode_unique UNIQUE (source_id, episode_index), 
	FOREIGN KEY(source_id) REFERENCES anime_sources (id) ON DELETE CASCADE
)




CREATE TABLE comment (
	episode_id BIGINT NOT NULL, 
	cid VARCHAR(255) NOT NULL, 
	p VARCHAR(255) NOT NULL, 
	m TEXT NOT NULL, 
	t DECIMAL(10, 2) NOT NULL, 
	id BIGSERIAL NOT NULL, 
	PRIMARY KEY (id), 
	CONSTRAINT idx_episode_cid_unique UNIQUE (episode_id, cid), 
	FOREIGN KEY(episode_id) REFERENCES episode (id) ON DELETE CASCADE
)



CREATE INDEX idx_title_season ON anime (title, season)

CREATE INDEX idx_created_at ON anime (created_at)

CREATE INDEX idx_type ON anime (type)

CREATE INDEX idx_title_fulltext ON anime (title)

CREATE INDEX idx_token ON api_tokens (token)

CREATE INDEX idx_expires_at ON api_tokens (expires_at)

CREATE INDEX idx_is_enabled ON api_tokens (is_enabled)

CREATE INDEX idx_expires_at ON cache_data (expires_at)

CREATE INDEX idx_cache_provider ON cache_data (cache_provider)

CREATE INDEX idx_is_enabled ON scheduled_tasks (is_enabled)

CREATE INDEX idx_next_run_at ON scheduled_tasks (next_run_at)

CREATE INDEX idx_job_type ON scheduled_tasks (job_type)

CREATE INDEX idx_name ON scheduled_tasks (name)

CREATE INDEX idx_is_enabled ON scrapers (is_enabled)

CREATE INDEX idx_display_order ON scrapers (display_order)

CREATE INDEX idx_status ON task_history (status)

CREATE INDEX idx_title ON task_history (title)

CREATE INDEX idx_finished_at ON task_history (finished_at)

CREATE INDEX idx_created_at ON task_history (created_at)

CREATE INDEX idx_custom_season_episode ON tmdb_episode_mapping (tmdb_tv_id, tmdb_episode_group_id, custom_season_number, custom_episode_number)

CREATE INDEX idx_tmdb_tv_id ON tmdb_episode_mapping (tmdb_tv_id)

CREATE INDEX idx_absolute_episode ON tmdb_episode_mapping (tmdb_tv_id, tmdb_episode_group_id, absolute_episode_number)

CREATE INDEX idx_ua_string ON ua_rules (ua_string)

CREATE INDEX idx_username ON users (username)

CREATE INDEX idx_token_update ON users (token_update)

CREATE INDEX idx_tmdb_id ON anime_metadata (tmdb_id)

CREATE INDEX idx_imdb_id ON anime_metadata (imdb_id)

CREATE INDEX idx_bangumi_id ON anime_metadata (bangumi_id)

CREATE INDEX idx_provider_name ON anime_sources (provider_name)

CREATE INDEX idx_anime_id ON anime_sources (anime_id)

CREATE INDEX idx_is_favorited ON anime_sources (is_favorited)

CREATE INDEX idx_bangumi_user_id ON bangumi_auth (bangumi_user_id)

CREATE INDEX idx_expires_at ON bangumi_auth (expires_at)

CREATE INDEX idx_oauth_expires_at ON oauth_states (expires_at)

CREATE INDEX idx_user_id ON oauth_states (user_id)

CREATE INDEX idx_access_time ON token_access_logs (access_time)

CREATE INDEX idx_ip_address ON token_access_logs (ip_address)

CREATE INDEX idx_token_id_time ON token_access_logs (token_id, access_time)

CREATE INDEX idx_source_id ON episode (source_id)

CREATE INDEX idx_comment_count ON episode (comment_count)

CREATE INDEX idx_fetched_at ON episode (fetched_at)

CREATE INDEX idx_time ON comment (t)

CREATE INDEX idx_episode_time ON comment (episode_id, t)

CREATE INDEX idx_episode_id ON comment (episode_id)